library(grf)
library(estimatr)
library(ggplot2)
library(dplyr)
library(tidyr)
process_forest_data <- function(project_name) {
library(tidyverse)
library(zoo)
library(tidyquant)
# Define the base file path
base_path <- paste0("data/raw/", project_name, "/", project_name, "_exp/")
forest_2000 <- read_csv(paste0(base_path, "/forest_2000_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(treecover_2000 = "sum")
dat <- forest_2000
for (i in 1:22) {
loss <- read_csv(paste0(base_path, "/loss_", sprintf("%02d", i+2000), "_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(!!paste0("loss_", sprintf("%02d", i)) := "sum")
dat <- dat %>% left_join(loss)
}
locations <- read_csv(paste0(base_path, "/points_with_mean_citydist.csv")) %>%
select(-c(".geo"))
dat <- dat %>% left_join(locations)
# View(dat)
deforestation_distance <- read_csv(paste0(base_path, "/points_with_defo_distance.csv")) %>%
select(-c(".geo")) %>% pivot_longer(cols = starts_with("distance"),
names_to = "year",
names_prefix = "distance_",
values_to = "defo_distance") %>%
mutate(year = as.numeric(year))
dat_long <- dat %>% pivot_longer(cols = starts_with("loss_"),
names_to = "year",
names_prefix = "loss_",
values_to = "loss") %>%
group_by(ID) %>%
arrange(year, .by_group = TRUE) %>%
mutate(cum_loss = cumsum(loss),
treecover_remaining = treecover_2000 - cum_loss,
year = as.numeric(year)) %>%
rename(elevation = be75) %>%
left_join(deforestation_distance)
# print(summary(dat_long))
dat_long <- drop_na(dat_long)
# there may be other .Rdata files in the /processed/ directory, these are outdated.
# from now on (dec 2023), the final dataframe after processing will be saved as
# dat_<method>.Rdata
save(dat_long, file = paste0("data/processed/", project_name, "/dat_matching.Rdata"))
# write as a CSV for future reference
write.csv(dat_long, paste0("data/processed/", project_name, "/dat_matching.csv"))
}
rm(list = ls())
process_forest_data <- function(project_name) {
library(tidyverse)
library(zoo)
library(tidyquant)
# Define the base file path
base_path <- paste0("data/raw/", project_name, "/", project_name, "_exp/")
forest_2000 <- read_csv(paste0(base_path, "/forest_2000_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(treecover_2000 = "sum")
dat <- forest_2000
for (i in 1:22) {
loss <- read_csv(paste0(base_path, "/loss_", sprintf("%02d", i+2000), "_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(!!paste0("loss_", sprintf("%02d", i)) := "sum")
dat <- dat %>% left_join(loss)
}
locations <- read_csv(paste0(base_path, "/points_with_mean_citydist.csv")) %>%
select(-c(".geo"))
dat <- dat %>% left_join(locations)
# View(dat)
deforestation_distance <- read_csv(paste0(base_path, "/points_with_defo_distance.csv")) %>%
select(-c(".geo")) %>% pivot_longer(cols = starts_with("distance"),
names_to = "year",
names_prefix = "distance_",
values_to = "defo_distance") %>%
mutate(year = as.numeric(year))
dat_long <- dat %>% pivot_longer(cols = starts_with("loss_"),
names_to = "year",
names_prefix = "loss_",
values_to = "loss") %>%
group_by(ID) %>%
arrange(year, .by_group = TRUE) %>%
mutate(cum_loss = cumsum(loss),
treecover_remaining = treecover_2000 - cum_loss,
year = as.numeric(year)) %>%
rename(elevation = be75) %>%
left_join(deforestation_distance)
# print(summary(dat_long))
dat_long <- drop_na(dat_long)
# there may be other .Rdata files in the /processed/ directory, these are outdated.
# from now on (dec 2023), the final dataframe after processing will be saved as
# dat_<method>.Rdata
save(dat_long, file = paste0("data/processed/", project_name, "/dat_forest.Rdata"))
# write as a CSV for future reference
write.csv(dat_long, paste0("data/processed/", project_name, "/dat_forest.csv"))
}
library(grf)
library(estimatr)
library(ggplot2)
library(dplyr)
library(tidyr)
forest_data <- function(project_name, start_year, method = "nearest", covariates = c("aspect", "elevation", "hillshade", "slope", "defo_distance", "accessibility"), distance = "logit", ratio = 5) {
# Load the data specific to the project
load(paste0("data/processed/", project_name, "/dat_forest.Rdata"))
# Filter the data to include only the year right before the start year
dat_year_before <- dat_long %>% filter(year == start_year - 1)
# Initialize an empty data frame to store results
causal_forest_results <- data.frame(year = integer(), ate = numeric(), lower = numeric(), upper = numeric())
# Loop through each year from the start year to 2022
for (year in start_year:2022) {
# Filter the data for the current year
dat_current_year <- dat_long %>% filter(year == year)
# Fit the Causal Forest model
cf_model <- causal_forest(as.formula(paste("treecover_remaining ~", paste(covariates, collapse = " + "))), data = dat_year_before)
# Estimate the Average Treatment Effect (ATE) for the current year
ate_estimate <- predict(cf_model, newdata = dat_current_year, estimate.variance = TRUE)
ate <- ate_estimate$predictions
ate_lower <- ate - 1.96 * sqrt(ate_estimate$variance)
ate_upper <- ate + 1.96 * sqrt(ate_estimate$variance)
# Append the results to the data frame
causal_forest_results <- rbind(causal_forest_results, data.frame(year = year, ate = ate, lower = ate_lower, upper = ate_upper))
}
# Plot the results
ggplot(causal_forest_results, aes(x = year, y = ate)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, fill = "forestgreen") +
labs(x = "Years since 2000", y = "ATE (treecover remaining)",
title = paste0("ATEs by Year for ", project_name, " project")) +
theme_bw()
# Return the results
return(causal_forest_results)
}
results <- forest_data(project_name = "adpml", start_year = 2020)
process_forest_data <- function(project_name) {
library(tidyverse)
library(zoo)
library(tidyquant)
# Define the base file path
base_path <- paste0("data/raw/", project_name, "/", project_name, "_exp/")
forest_2000 <- read_csv(paste0(base_path, "/forest_2000_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(treecover_2000 = "sum")
dat <- forest_2000
for (i in 1:22) {
loss <- read_csv(paste0(base_path, "/loss_", sprintf("%02d", i+2000), "_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(!!paste0("loss_", sprintf("%02d", i)) := "sum")
dat <- dat %>% left_join(loss)
}
locations <- read_csv(paste0(base_path, "/points_with_mean_citydist.csv")) %>%
select(-c(".geo"))
dat <- dat %>% left_join(locations)
# View(dat)
deforestation_distance <- read_csv(paste0(base_path, "/points_with_defo_distance.csv")) %>%
select(-c(".geo")) %>% pivot_longer(cols = starts_with("distance"),
names_to = "year",
names_prefix = "distance_",
values_to = "defo_distance") %>%
mutate(year = as.numeric(year))
dat_long <- dat %>% pivot_longer(cols = starts_with("loss_"),
names_to = "year",
names_prefix = "loss_",
values_to = "loss") %>%
group_by(ID) %>%
arrange(year, .by_group = TRUE) %>%
mutate(cum_loss = cumsum(loss),
treecover_remaining = treecover_2000 - cum_loss,
year = as.numeric(year)) %>%
rename(elevation = be75) %>%
left_join(deforestation_distance)
# print(summary(dat_long))
dat_long <- drop_na(dat_long)
# there may be other .Rdata files in the /processed/ directory, these are outdated.
# from now on (dec 2023), the final dataframe after processing will be saved as
# dat_<method>.Rdata
save(dat_long, file = paste0("data/processed/", project_name, "/dat_forest.Rdata"))
# write as a CSV for future reference
write.csv(dat_long, paste0("data/processed/", project_name, "/dat_forest.csv"))
}
load("~/Library/CloudStorage/GoogleDrive-nicholas.wu@yale.edu/.shortcut-targets-by-id/1rdr5l5G0qIwemvG4qzNBH4KvxTHwoEBJ/REDD_specification_curve/code/methods/causal_forests/.RData")
library(grf)
library(estimatr)
library(ggplot2)
library(dplyr)
library(tidyr)
forest_data <- function(project_name, start_year, method = "nearest", covariates = c("aspect", "elevation", "hillshade", "slope", "defo_distance", "accessibility"), distance = "logit", ratio = 5) {
# Load the data specific to the project
load(paste0("data/processed/", project_name, "/dat_forest.Rdata"))
# Filter the data to include only the year right before the start year
dat_year_before <- dat_long %>% filter(year == start_year - 1)
# Initialize an empty data frame to store results
causal_forest_results <- data.frame(year = integer(), ate = numeric(), lower = numeric(), upper = numeric())
# Loop through each year from the start year to 2022
for (year in start_year:2022) {
# Filter the data for the current year
dat_current_year <- dat_long %>% filter(year == year)
# Fit the Causal Forest model
cf_model <- causal_forest(as.formula(paste("treecover_remaining ~", paste(covariates, collapse = " + "))), data = dat_year_before)
# Estimate the Average Treatment Effect (ATE) for the current year
ate_estimate <- predict(cf_model, newdata = dat_current_year, estimate.variance = TRUE)
ate <- ate_estimate$predictions
ate_lower <- ate - 1.96 * sqrt(ate_estimate$variance)
ate_upper <- ate + 1.96 * sqrt(ate_estimate$variance)
# Append the results to the data frame
causal_forest_results <- rbind(causal_forest_results, data.frame(year = year, ate = ate, lower = ate_lower, upper = ate_upper))
}
# Plot the results
ggplot(causal_forest_results, aes(x = year, y = ate)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, fill = "forestgreen") +
labs(x = "Years since 2000", y = "ATE (treecover remaining)",
title = paste0("ATEs by Year for ", project_name, " project")) +
theme_bw()
# Return the results
return(causal_forest_results)
}
results <- forest_data(project_name = "adpml", start_year = 2020)
process_forest_data <- function(project_name) {
library(tidyverse)
library(zoo)
library(tidyquant)
# Define the base file path
base_path <- paste0("data/raw/", project_name, "/", project_name, "_exp/")
forest_2000 <- read_csv(paste0(base_path, "/forest_2000_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(treecover_2000 = "sum")
dat <- forest_2000
for (i in 1:22) {
loss <- read_csv(paste0(base_path, "/loss_", sprintf("%02d", i+2000), "_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(!!paste0("loss_", sprintf("%02d", i)) := "sum")
dat <- dat %>% left_join(loss)
}
locations <- read_csv(paste0(base_path, "/points_with_mean_citydist.csv")) %>%
select(-c(".geo"))
dat <- dat %>% left_join(locations)
# View(dat)
deforestation_distance <- read_csv(paste0(base_path, "/points_with_defo_distance.csv")) %>%
select(-c(".geo")) %>% pivot_longer(cols = starts_with("distance"),
names_to = "year",
names_prefix = "distance_",
values_to = "defo_distance") %>%
mutate(year = as.numeric(year))
dat_long <- dat %>% pivot_longer(cols = starts_with("loss_"),
names_to = "year",
names_prefix = "loss_",
values_to = "loss") %>%
group_by(ID) %>%
arrange(year, .by_group = TRUE) %>%
mutate(cum_loss = cumsum(loss),
treecover_remaining = treecover_2000 - cum_loss,
year = as.numeric(year)) %>%
rename(elevation = be75) %>%
left_join(deforestation_distance)
# print(summary(dat_long))
dat_long <- drop_na(dat_long)
# there may be other .Rdata files in the /processed/ directory, these are outdated.
# from now on (dec 2023), the final dataframe after processing will be saved as
# dat_<method>.Rdata
save(dat_long, file = paste0("data/processed/", project_name, "/dat_forest.Rdata"))
# write as a CSV for future reference
write.csv(dat_long, paste0("data/processed/", project_name, "/dat_forest.csv"))
}
save(dat_long, file = paste0("data/processed/", project_name, "/dat_forest.Rdata"))
# Define the base file path
base_path <- paste0("data/raw/", project_name, "/", project_name, "_exp/")
process_forest_data <- function(project_name) {
process_forest_data <- function(project_name) {
library(tidyverse)
library(zoo)
library(tidyquant)
# Define the base file path
base_path <- paste0("data/raw/", project_name, "/", project_name, "_exp/")
forest_2000 <- read_csv(paste0(base_path, "/forest_2000_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(treecover_2000 = "sum")
dat <- forest_2000
for (i in 1:22) {
loss <- read_csv(paste0(base_path, "/loss_", sprintf("%02d", i+2000), "_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(!!paste0("loss_", sprintf("%02d", i)) := "sum")
dat <- dat %>% left_join(loss)
}
locations <- read_csv(paste0(base_path, "/points_with_mean_citydist.csv")) %>%
select(-c(".geo"))
dat <- dat %>% left_join(locations)
# View(dat)
deforestation_distance <- read_csv(paste0(base_path, "/points_with_defo_distance.csv")) %>%
select(-c(".geo")) %>% pivot_longer(cols = starts_with("distance"),
names_to = "year",
names_prefix = "distance_",
values_to = "defo_distance") %>%
mutate(year = as.numeric(year))
dat_long <- dat %>% pivot_longer(cols = starts_with("loss_"),
names_to = "year",
names_prefix = "loss_",
values_to = "loss") %>%
source("~/Library/CloudStorage/GoogleDrive-nicholas.wu@yale.edu/.shortcut-targets-by-id/1rdr5l5G0qIwemvG4qzNBH4KvxTHwoEBJ/REDD_specification_curve/code/methods/causal_forests/forest_processing.R")
process_forest_data <- function(project_name) {
library(tidyverse)
library(zoo)
library(tidyquant)
# Define the base file path
base_path <- paste0("data/raw/", project_name, "/", project_name, "_exp/")
forest_2000 <- read_csv(paste0(base_path, "/forest_2000_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(treecover_2000 = "sum")
dat <- forest_2000
for (i in 1:22) {
loss <- read_csv(paste0(base_path, "/loss_", sprintf("%02d", i+2000), "_", project_name, "_points.csv")) %>%
select(-c(".geo")) %>%
rename(!!paste0("loss_", sprintf("%02d", i)) := "sum")
dat <- dat %>% left_join(loss)
}
locations <- read_csv(paste0(base_path, "/points_with_mean_citydist.csv")) %>%
select(-c(".geo"))
dat <- dat %>% left_join(locations)
# View(dat)
deforestation_distance <- read_csv(paste0(base_path, "/points_with_defo_distance.csv")) %>%
select(-c(".geo")) %>% pivot_longer(cols = starts_with("distance"),
names_to = "year",
names_prefix = "distance_",
values_to = "defo_distance") %>%
mutate(year = as.numeric(year))
dat_long <- dat %>% pivot_longer(cols = starts_with("loss_"),
names_to = "year",
names_prefix = "loss_",
values_to = "loss") %>%
group_by(ID) %>%
arrange(year, .by_group = TRUE) %>%
mutate(cum_loss = cumsum(loss),
treecover_remaining = treecover_2000 - cum_loss,
year = as.numeric(year)) %>%
rename(elevation = be75) %>%
left_join(deforestation_distance)
# print(summary(dat_long))
dat_long <- drop_na(dat_long)
# there may be other .Rdata files in the /processed/ directory, these are outdated.
# from now on (dec 2023), the final dataframe after processing will be saved as
# dat_<method>.Rdata
save(dat_long, file = paste0("data/processed/", project_name, "/dat_forest.Rdata"))
# write as a CSV for future reference
write.csv(dat_long, paste0("data/processed/", project_name, "/dat_forest.csv"))
}
johnny <- c(5,6,7)
johnny
